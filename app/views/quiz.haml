%h1 Welcome to the Quiz!
%button.btn(ng-click="showCorrectAnswers()" ng-show="quiz.disabled") Show Answers
.status(ng-show="status") {{status}}
%quiz(ng-show="quiz.ready")
  %questions
    %question(name="q001")
      %description
        Which is not an advantage of using a closure?

      %choices
        %choice(value="a") Prevent pollution of global scope
        %choice(value="b") Encapsulation
        %choice(value="c") Private properties and methods
        %choice(value="d") Allow conditional use of ‘strict mode’

    %question(name="q002")
      %description
        To create a columned list of two­line email subjects and dates for a
        master­detail view, which are the most semantically correct?

      %choices
        %choice(value="a" class="code")&= "<div>+</span>"
        %choice(value="b" class="code")&= "<tr>+<td>"
        %choice(value="c" class="code")&= "<ul>+<li>"
        %choice(value="d" class="code")&= "<p>+<br>"
        %choice(value="e")&= "none of these"
        %choice(value="f")&= "all of these"

    %question(name="q003")
      %description
        To pass an array of strings to a function, you should not use...

      %choices
        %choice(value="a" class="code") fn.apply(this, stringsArray)
        %choice(value="b" class="code") fn.call(this, stringsArray)
        %choice(value="c" class="code") fn.bind(this, stringsArray)

    %question(name="q004")
      %description
        %inline_answer(name="a1")
        and
        %inline_answer(name="a2")
          would be the HTML tags you would use to display a menu item and its
          description.

    %question(name="q005")
      %description
        &= "Given <div id=”outer”><div class=”inner”></div></div>,"
        which of these two is the most performant way to select the inner div?

      %choices
        %choice(value="a" class="code") getElementById("outer").children[0]
        %choice(value="b" class="code") getElementsByClassName("inner")[0]

    %question(name="q006")
      %description
        Given this:
      %pre
        :preserve
          angular.module(‘myModule’).service(‘myService', function(){
            var message = "Message One!"
            var getMessage = function(){
              return this.message
            }
            this.message = "Message Two!"
            this.getMessage = function(){ return message }
            function(){
              {
                getMessage: getMessage,
                message: "Message Three!"
              }
            }
          }
      %p
        Which message will be returned by injecting this service and executing
        'myService.getMessage()'?
      %choices
        %choice(value="a") "Message One!"
        %choice(value="b") "Message Two!"
        %choice(value="c") "Message Three!"

%button.btn.btn-large.btn-primary(type="submit"
  ng-click="submitResponse()"
  ng-show="quiz.ready && !quiz.disabled"
  ng-disabled="processing") Submit
